{"body":"<p>Title: Test Post\nAuthor: Shawn Mealey</p>\n<h2 id=\"date-june-18-2012\">Date: June 18, 2012</h2>\n<h1 id=\"dillinger\">Dillinger</h1>\n<p>Dillinger is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.</p>\n<ul>\n<li>Type some Markdown on the left</li>\n<li>See HTML in the right</li>\n<li>Magic</li>\n</ul>\n<p>Markdown is a lightweight markup language based on the formatting conventions that people naturally use in email.  As <a href=\"http://daringfireball.net\">John Gruber</a> writes on the <a href=\"http://daringfireball.net/projects/markdown/\">Markdown site</a></p>\n<blockquote>\n<p>The overriding design goal for Markdown&#39;s\nformatting syntax is to make it as readable\nas possible. The idea is that a\nMarkdown-formatted document should be\npublishable as-is, as plain text, without\nlooking like it&#39;s been marked up with tags\nor formatting instructions.</p>\n</blockquote>\n<p>This text you see here is <em>actually</em> written in Markdown! To get a feel for Markdown&#39;s syntax, type some text into the left window and watch the results in the right.</p>\n<h3 id=\"version\">Version</h3>\n<p>3.2.7</p>\n<h3 id=\"tech\">Tech</h3>\n<p>Dillinger uses a number of open source projects to work properly:</p>\n<ul>\n<li><a href=\"http://angularjs.org\">AngularJS</a> - HTML enhanced for web apps!</li>\n<li><a href=\"http://ace.ajax.org\">Ace Editor</a> - awesome web-based text editor</li>\n<li><a href=\"https://github.com/chjj/marked\">Marked</a> - a super fast port of Markdown to JavaScript</li>\n<li><a href=\"http://twitter.github.com/bootstrap/\">Twitter Bootstrap</a> - great UI boilerplate for modern web apps</li>\n<li><a href=\"http://nodejs.org\">node.js</a> - evented I/O for the backend</li>\n<li><a href=\"http://expressjs.com\">Express</a> - fast node.js network app framework <a href=\"http://twitter.com/tjholowaychuk\">@tjholowaychuk</a></li>\n<li><a href=\"http://gulpjs.com\">Gulp</a> - the streaming build system</li>\n<li><a href=\"https://github.com/madrobby/keymaster\">keymaster.js</a> - awesome keyboard handler lib by <a href=\"http://twitter.com/thomasfuchs\">@thomasfuchs</a></li>\n<li><a href=\"http://jquery.com\">jQuery</a> - duh</li>\n</ul>\n<p>And of course Dillinger itself is open source with a <a href=\"https://github.com/joemccann/dillinger\">public repository</a>\n on GitHub.</p>\n<h3 id=\"installation\">Installation</h3>\n<p>You need Gulp installed globally:</p>\n<pre><code class=\"lang-sh\">$ npm i -g gulp\n</code></pre>\n<pre><code class=\"lang-sh\">$ git clone [git-repo-url] dillinger\n$ cd dillinger\n$ npm i -d\n$ gulp build --prod\n$ NODE_ENV=production node app\n</code></pre>\n<h3 id=\"plugins\">Plugins</h3>\n<p>Dillinger is currently extended with the following plugins</p>\n<ul>\n<li>Dropbox</li>\n<li>Github</li>\n<li>Google Drive</li>\n<li>OneDrive</li>\n</ul>\n<p>Readmes, how to use them in your own application can be found here:</p>\n<ul>\n<li><a href=\"https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md\">plugins/dropbox/README.md</a></li>\n<li><a href=\"https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md\">plugins/github/README.md</a></li>\n<li><a href=\"https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md\">plugins/googledrive/README.md</a></li>\n<li><a href=\"https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md\">plugins/onedrive/README.md</a></li>\n</ul>\n<h3 id=\"development\">Development</h3>\n<p>Want to contribute? Great!</p>\n<p>Dillinger uses Gulp + Webpack for fast developing.\nMake a change in your file and instantanously see your updates!</p>\n<p>Open your favorite Terminal and run these commands.</p>\n<p>First Tab:</p>\n<pre><code class=\"lang-sh\">$ node app\n</code></pre>\n<p>Second Tab:</p>\n<pre><code class=\"lang-sh\">$ gulp watch\n</code></pre>\n<p>(optional) Third:</p>\n<pre><code class=\"lang-sh\">$ karma start\n</code></pre>\n<h3 id=\"docker\">Docker</h3>\n<p>Dillinger is very easy to install and deploy in a Docker container.</p>\n<p>By default, the Docker will expose port 80, so change this within the Dockerfile if necessary. When ready, simply use the Dockerfile to build the image.</p>\n<pre><code class=\"lang-sh\">cd dillinger\ndocker build -t &lt;youruser&gt;/dillinger:latest .\n</code></pre>\n<p>This will create the dillinger image and pull in the necessary dependencies. Once done, run the Docker and map the port to whatever you wish on your host. In this example, we simply map port 80 of the host to port 80 of the Docker (or whatever port was exposed in the Dockerfile):</p>\n<pre><code class=\"lang-sh\">docker run -d -p 80:80 --restart=&quot;always&quot; &lt;youruser&gt;/dillinger:latest\n</code></pre>\n<p>Verify the deployment by navigating to your server address in your preferred browser.</p>\n<h3 id=\"n-solid-and-nginx\">N|Solid and NGINX</h3>\n<p>More details coming soon.</p>\n<h4 id=\"docker-compose-yml\">docker-compose.yml</h4>\n<p>Change the path for the nginx conf mounting path to your full path, not mine!</p>\n<h3 id=\"todos\">Todos</h3>\n<ul>\n<li>Write Tests</li>\n<li>Rethink Github Save</li>\n<li>Add Code Comments</li>\n<li>Add Night Mode</li>\n</ul>\n<h2 id=\"license\">License</h2>\n<p>MIT</p>\n<p><strong>Free Software, Hell Yeah!</strong></p>\n"}